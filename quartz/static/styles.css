/*
npx quartz build --serve

npx tailwindcss -i ./quartz/styles/tailwind.css -o ./quartz/static/styles.css --watch
*/

/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.\!container {
  width: 100% !important;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .\!container {
    max-width: 640px !important;
  }

  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .\!container {
    max-width: 768px !important;
  }

  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .\!container {
    max-width: 1024px !important;
  }

  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .\!container {
    max-width: 1280px !important;
  }

  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .\!container {
    max-width: 1536px !important;
  }

  .container {
    max-width: 1536px;
  }
}

/**
     * Digital Garden Custom Overrides
     */

a {
  font-weight: 600;
  color: var(--secondary);
  text-decoration-line: none;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  &:hover {
    color: var(--tertiary) !important;
  }
  &.dg-internal {
    border-radius: 0.25rem;
  }
  &.dg-internal {
    background-color: var(--highlight);
  }
  &.dg-internal {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
  }
  &.dg-internal {
    line-height: 1.5rem;
  }
  &.dg-internal {
    text-decoration-line: none;
  }
  &.dg-internal {
    &:has(> img) {
      border-radius: 0px;
    }
    &:has(> img) {
      background-image: none;
    }
    &:has(> img) {
      padding-left: 0px;
      padding-right: 0px;
    }
  }
  &.dg-external .dg-external-icon {
    margin-left: 0.15em;
    margin-right: 0.15em;
  }
  &.dg-external .dg-external-icon {
    height: 1ex;
  }
  &.dg-external .dg-external-icon {
    >path {
      fill: var(--dark);
    }
  }
}

.dg-overflow {
  max-height: 24rem;
  overflow-y: auto;
  &>li:last-of-type {
    margin-bottom: 2rem;
  }
  &:after {
    pointer-events: none;
  }
  &:after {
    position: absolute;
  }
  &:after {
    bottom: 0px;
  }
  &:after {
    left: 0px;
  }
  &:after {
    height: 3rem;
  }
  &:after {
    width: 100%;
  }
  &:after {
    background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
  }
  &:after {
    --tw-gradient-from: transparent var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
  &:after {
    --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), transparent var(--tw-gradient-via-position), var(--tw-gradient-to);
  }
  &:after {
    --tw-gradient-to: var(--light) var(--tw-gradient-to-position);
  }
  &:after {
    opacity: 1;
  }
  &:after {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  &:after {
    transition-duration: 300ms;
  }
}

ul.dg-overflow,
    ol.dg-overflow {
  clear: both;
  --tw-content: none;
  content: var(--tw-content);
  &:after {
    clear: both;
  }
  &:after {
    --tw-content: none;
    content: var(--tw-content);
  }
}

.dg-breadcrumb-container {
  margin: 0px;
  margin-top: 0.75rem;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 0px;
}

.dg-breadcrumb-element {
  display: flex;
  align-items: center;
  justify-content: center;
  p {
    margin: 0px;
  }
  p {
    margin-left: 0.5rem;
  }
  p {
    padding: 0px;
  }
  p {
    line-height: 1.5;
  }
}

.dg-clipboard-button {
  position: absolute;
  right: 0px;
  float: right;
  margin: 0.375rem;
  display: flex;
  border-radius: 0.375rem;
  border-width: 1px;
  border-style: solid;
  border-color: var(--dark);
  background-color: var(--light);
  padding: 0.25rem;
  color: var(--gray);
  opacity: 0;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  &>svg {
    fill: var(--light);
  }
  &>svg {
    --tw-contrast: contrast(0.3);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
  &:hover {
    cursor: pointer;
  }
  &:hover {
    border-color: var(--secondary);
  }
  &:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

pre:hover>.dg-clipboard-button {
  opacity: 1;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

.dg-darkmode {
  position: relative;
  margin-left: 0.625rem;
  margin-right: 0.625rem;
  height: 1.25rem;
  width: 1.25rem;
  &>.toggle {
    box-sizing: border-box;
  }
  &>.toggle {
    display: none;
  }
  & svg {
    position: absolute;
  }
  & svg {
    top: calc(50% - 10px);
  }
  & svg {
    height: 1.25rem;
  }
  & svg {
    width: 1.25rem;
  }
  & svg {
    cursor: pointer;
  }
  & svg {
    fill: var(--darkgray);
  }
  & svg {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & svg {
    transition-duration: 100ms;
  }
}

/**
     * Syntax Highlighting
     */

code[data-theme*=" "] {
  background-color: var(--shiki-color-background);
  color: var(--shiki-color-text);
}

code[data-theme*=" "] span {
  color: var(--shiki-color-text);
}

[saved-theme="dark"] code[data-theme*=" "] {
  background-color: var(--shiki-color-background);
  color: var(--shiki-color-text);
}

[saved-theme="dark"] code[data-theme*=" "] span {
  color: var(--shiki-color-text);
}

/**
     * Callout
     */

.callout {
  box-sizing: border-box;
  overflow-y: hidden;
  border-radius: 0.375rem;
  border-width: 1px;
  border-style: solid;
  padding: 1rem;
  transition-property: max-height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  &>*:nth-child(2) {
    margin-top: 0px;
  }
  &[data-callout] {
    border-color: rgb(129 140 248 / 0.25);
  }
  &[data-callout] {
    background-color: rgb(129 140 248 / 0.1);
  }
  &[data-callout] {
    --tw-text-opacity: 1;
    color: rgb(129 140 248 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout] {
      border-color: rgb(79 70 229 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout] {
      background-color: rgb(79 70 229 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout] {
      --tw-text-opacity: 1;
      color: rgb(79 70 229 / var(--tw-text-opacity));
    }
  }
  &[data-callout="abstract"] {
    border-color: rgb(96 165 250 / 0.25);
  }
  &[data-callout="abstract"] {
    background-color: rgb(96 165 250 / 0.1);
  }
  &[data-callout="abstract"] {
    --tw-text-opacity: 1;
    color: rgb(96 165 250 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="abstract"] {
      border-color: rgb(37 99 235 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="abstract"] {
      background-color: rgb(37 99 235 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="abstract"] {
      --tw-text-opacity: 1;
      color: rgb(37 99 235 / var(--tw-text-opacity));
    }
  }
  &[data-callout="info"],
        &[data-callout="todo"] {
    border-color: rgb(34 211 238 / 0.25);
  }
  &[data-callout="info"],
        &[data-callout="todo"] {
    background-color: rgb(34 211 238 / 0.1);
  }
  &[data-callout="info"],
        &[data-callout="todo"] {
    --tw-text-opacity: 1;
    color: rgb(34 211 238 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="info"],
        &[data-callout="todo"] {
      border-color: rgb(8 145 178 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="info"],
        &[data-callout="todo"] {
      background-color: rgb(8 145 178 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="info"],
        &[data-callout="todo"] {
      --tw-text-opacity: 1;
      color: rgb(8 145 178 / var(--tw-text-opacity));
    }
  }
  &[data-callout="tip"] {
    border-color: rgb(45 212 191 / 0.25);
  }
  &[data-callout="tip"] {
    background-color: rgb(45 212 191 / 0.1);
  }
  &[data-callout="tip"] {
    --tw-text-opacity: 1;
    color: rgb(45 212 191 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="tip"] {
      border-color: rgb(13 148 136 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="tip"] {
      background-color: rgb(13 148 136 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="tip"] {
      --tw-text-opacity: 1;
      color: rgb(13 148 136 / var(--tw-text-opacity));
    }
  }
  &[data-callout="success"] {
    border-color: rgb(74 222 128 / 0.25);
  }
  &[data-callout="success"] {
    background-color: rgb(74 222 128 / 0.1);
  }
  &[data-callout="success"] {
    --tw-text-opacity: 1;
    color: rgb(74 222 128 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="success"] {
      border-color: rgb(22 163 74 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="success"] {
      background-color: rgb(22 163 74 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="success"] {
      --tw-text-opacity: 1;
      color: rgb(22 163 74 / var(--tw-text-opacity));
    }
  }
  &[data-callout="question"] {
    border-color: rgb(250 204 21 / 0.25);
  }
  &[data-callout="question"] {
    background-color: rgb(250 204 21 / 0.1);
  }
  &[data-callout="question"] {
    --tw-text-opacity: 1;
    color: rgb(250 204 21 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="question"] {
      border-color: rgb(202 138 4 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="question"] {
      background-color: rgb(202 138 4 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="question"] {
      --tw-text-opacity: 1;
      color: rgb(202 138 4 / var(--tw-text-opacity));
    }
  }
  &[data-callout="warning"] {
    border-color: rgb(251 146 60 / 0.25);
  }
  &[data-callout="warning"] {
    background-color: rgb(251 146 60 / 0.1);
  }
  &[data-callout="warning"] {
    --tw-text-opacity: 1;
    color: rgb(251 146 60 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="warning"] {
      border-color: rgb(234 88 12 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="warning"] {
      background-color: rgb(234 88 12 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="warning"] {
      --tw-text-opacity: 1;
      color: rgb(234 88 12 / var(--tw-text-opacity));
    }
  }
  &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
    border-color: rgb(248 113 113 / 0.25);
  }
  &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
    background-color: rgb(248 113 113 / 0.1);
  }
  &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
    --tw-text-opacity: 1;
    color: rgb(248 113 113 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
      border-color: rgb(220 38 38 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
      background-color: rgb(220 38 38 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="failure"],
        &[data-callout="danger"],
        &[data-callout="bug"] {
      --tw-text-opacity: 1;
      color: rgb(220 38 38 / var(--tw-text-opacity));
    }
  }
  &[data-callout="example"] {
    border-color: rgb(232 121 249 / 0.25);
  }
  &[data-callout="example"] {
    background-color: rgb(232 121 249 / 0.1);
  }
  &[data-callout="example"] {
    --tw-text-opacity: 1;
    color: rgb(232 121 249 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="example"] {
      border-color: rgb(192 38 211 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="example"] {
      background-color: rgb(192 38 211 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="example"] {
      --tw-text-opacity: 1;
      color: rgb(192 38 211 / var(--tw-text-opacity));
    }
  }
  &[data-callout="quote"] {
    border-color: rgb(156 163 175 / 0.25);
  }
  &[data-callout="quote"] {
    background-color: rgb(156 163 175 / 0.1);
  }
  &[data-callout="quote"] {
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity));
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="quote"] {
      border-color: rgb(75 85 99 / 0.25);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="quote"] {
      background-color: rgb(75 85 99 / 0.1);
    }
  }
  @media (prefers-color-scheme: dark) {
    &[data-callout="quote"] {
      --tw-text-opacity: 1;
      color: rgb(75 85 99 / var(--tw-text-opacity));
    }
  }
  &.is-collapsed>.callout-title>.fold {
    --tw-rotate: -90deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  &.is-collapsed>.callout-title>.fold {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

.callout-title {
  display: flex;
  gap: 1.25rem;
  padding: 1rem;
  & .fold {
    margin-left: 0.5rem;
  }
  & .fold {
    cursor: pointer;
  }
  & .fold {
    opacity: 0.8;
  }
  & .fold {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  & .fold {
    transition-duration: 300ms;
  }
  &>.callout-title-inner>p {
    margin: 0px;
  }
}

.callout-icon {
  height: 18px;
  width: 18px;
  flex: none;
  padding-top: 1rem;
}

.callout-title-inner {
  font-weight: 700;
}

.visible {
  visibility: visible;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.m-0 {
  margin: 0px;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.\!contents {
  display: contents !important;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize {
  resize: both;
}

.list-none {
  list-style-type: none;
}

.flex-wrap {
  flex-wrap: wrap;
}

.bg-transparent {
  background-color: transparent;
}

.p-0 {
  padding: 0px;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.capitalize {
  text-transform: capitalize;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/**
     * Syntax Highlighting
     */

:root {
  --shiki-color-text: #24292e;
  --shiki-color-text-darker: #3c444c;
  --shiki-color-background: #f8f8f8;
  --shiki-color-background-lighter: #636363;
  --shiki-token-constant: #005cc5;
  --shiki-token-string: #032f62;
  --shiki-token-comment: #6a737d;
  --shiki-token-keyword: #d73a49;
  --shiki-token-parameter: #24292e;
  --shiki-token-function: #24292e;
  --shiki-token-string-expression: #22863a;
  --shiki-token-punctuation: #24292e;
  --shiki-token-link: #24292e;
}

[saved-theme="dark"] {
  --shiki-color-text: #e1e4e8 !important;
  --shiki-color-text-darker: #bac1ca !important;
  --shiki-color-background: #24292e !important;
  --shiki-color-background-lighter: #404952 !important;
  --shiki-token-constant: #79b8ff !important;
  --shiki-token-string: #9ecbff !important;
  --shiki-token-comment: #6a737d !important;
  --shiki-token-keyword: #f97583 !important;
  --shiki-token-parameter: #e1e4e8 !important;
  --shiki-token-function: #e1e4e8 !important;
  --shiki-token-string-expression: #85e89d !important;
  --shiki-token-punctuation: #e1e4e8 !important;
  --shiki-token-link: #e1e4e8 !important;
}

:root[saved-theme="dark"] {
  color-scheme: dark;
}

:root[saved-theme="light"] {
  color-scheme: light;
}

:root[saved-theme="dark"] .toggle~label #dayIcon {
  opacity: 0;
}

:root[saved-theme="dark"] .toggle~label #nightIcon {
  opacity: 1;
}

:root .toggle~label #dayIcon {
  opacity: 1;
}

:root .toggle~label #nightIcon {
  opacity: 0;
}